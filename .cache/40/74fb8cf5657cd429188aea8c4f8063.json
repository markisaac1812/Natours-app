{"id":"../../node_modules/l/src/utilities.js","dependencies":[{"name":"E:\\Node_Course\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1760619733733},{"name":"E:\\Node_Course\\4-natours\\starter\\node_modules\\l\\package.json","includedInParent":true,"mtime":1760617906801},{"name":"stream","loc":{"line":2,"column":23,"index":36},"parent":"E:\\Node_Course\\4-natours\\starter\\node_modules\\l\\src\\utilities.js","resolved":"E:\\Node_Course\\4-natours\\starter\\node_modules\\stream-browserify\\index.js"},{"name":"buffer","parent":"E:\\Node_Course\\4-natours\\starter\\node_modules\\l\\src\\utilities.js","resolved":"E:\\Node_Course\\4-natours\\starter\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\nconst stream = require('stream')\n\nvar utilities = {}\n\nutilities.bufferStream = function (stream) {\n  return new Promise(function (resolve, reject) {\n    var buf\n    stream.on('data', function (data) {\n      if (!buf) {\n        buf = Buffer.from(data)\n      } else {\n        buf = Buffer.concat([buf, data])\n      }\n    })\n    stream.on('end', function () {\n      resolve(buf)\n    })\n    stream.on('error', reject)\n  })\n}\nutilities.bufferIfStream = function (r) {\n  if (r instanceof stream.Readable) {\n    return utilities.bufferStream(r)\n  }\n  return r\n}\nutilities.segmentType = function (segment) {\n  if (segment.$type) return segment.$type\n  // TODO infer from function name(){}\n  for (var type of ['stream', 'sync', 'async', 'promise']) {\n    if (typeof segment[type] !== 'undefined') return type\n  }\n  return 'auto'\n}\nutilities.expandSegment = function (segment) {\n  if (typeof segment === 'function') {\n    segment = {\n      $func: segment\n    }\n  } else if (utilities.isPromise(segment)) {\n    segment = {\n      promise: segment\n    }\n  } else if (segment.func) {\n    segment.$func = segment.func\n    delete segment.func\n  }\n\n  segment.$type = utilities.segmentType(segment)\n  if (!segment.$func) {\n    segment.$func = segment[segment.$type]\n    delete segment[segment.$type]\n  }\n\n  var keys = Object.keys(segment).filter((k) => k[0] !== '$')\n  if (keys.length > 0) {\n    segment.$type = 'split'\n    for (var key of keys) {\n      segment[key] = utilities.expandSegment(segment[key])\n    }\n  }\n\n  return segment\n}\nutilities.isPromise = function (obj) {\n  return obj && typeof obj.then === 'function'\n}\nmodule.exports = utilities\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/l/src/utilities.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/l/src/utilities.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}}],"sources":{"../../node_modules/l/src/utilities.js":"'use strict'\nconst stream = require('stream')\n\nvar utilities = {}\n\nutilities.bufferStream = function (stream) {\n  return new Promise(function (resolve, reject) {\n    var buf\n    stream.on('data', function (data) {\n      if (!buf) {\n        buf = Buffer.from(data)\n      } else {\n        buf = Buffer.concat([buf, data])\n      }\n    })\n    stream.on('end', function () {\n      resolve(buf)\n    })\n    stream.on('error', reject)\n  })\n}\nutilities.bufferIfStream = function (r) {\n  if (r instanceof stream.Readable) {\n    return utilities.bufferStream(r)\n  }\n  return r\n}\nutilities.segmentType = function (segment) {\n  if (segment.$type) return segment.$type\n  // TODO infer from function name(){}\n  for (var type of ['stream', 'sync', 'async', 'promise']) {\n    if (typeof segment[type] !== 'undefined') return type\n  }\n  return 'auto'\n}\nutilities.expandSegment = function (segment) {\n  if (typeof segment === 'function') {\n    segment = {\n      $func: segment\n    }\n  } else if (utilities.isPromise(segment)) {\n    segment = {\n      promise: segment\n    }\n  } else if (segment.func) {\n    segment.$func = segment.func\n    delete segment.func\n  }\n\n  segment.$type = utilities.segmentType(segment)\n  if (!segment.$func) {\n    segment.$func = segment[segment.$type]\n    delete segment[segment.$type]\n  }\n\n  var keys = Object.keys(segment).filter((k) => k[0] !== '$')\n  if (keys.length > 0) {\n    segment.$type = 'split'\n    for (var key of keys) {\n      segment[key] = utilities.expandSegment(segment[key])\n    }\n  }\n\n  return segment\n}\nutilities.isPromise = function (obj) {\n  return obj && typeof obj.then === 'function'\n}\nmodule.exports = utilities\n"},"lineCount":71}},"error":null,"hash":"97c3b0937d7d4d1c478287ae5a04a936","cacheData":{"env":{}}}